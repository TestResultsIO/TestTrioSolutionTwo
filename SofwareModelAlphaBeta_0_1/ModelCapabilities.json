{
  "ModelTypeList": [
    {
      "TypeName": "Progile.TRIO.BaseModel.BaseScreen",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "MethodName": "WaitForAppear",
          "DisplayName": "Verify screen appears",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The screen {this} was displayed.",
          "FailedMessage": "The element {this} was not found on the UI.",
          "HintText": "Waits for the screen to appear on the UI. \r\nReturns false if screen is not found."
        },
        {
          "MethodName": "WaitForDisappear",
          "DisplayName": "Verify screen disappears",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The screen {this} was no longer displayed.",
          "FailedMessage": "The screen {this} was unexpectedly still displayed on the UI.",
          "HintText": "Waits for the screen to disappear from the UI. \r\nReturns false if screen is still found."
        }
      ],
      "HiddenOverrideInteractions": [
        {
          "Parameters": [
            {
              "Name": "elementInArea",
              "DisplayName": "elementInArea",
              "IsOptional": false,
              "Type": "Progile.TRIO.BaseModel.OnScreenElement"
            },
            {
              "Name": "tolerance",
              "DisplayName": "tolerance",
              "IsOptional": true,
              "Type": "System.Double"
            }
          ],
          "MethodName": "SetSearchArea",
          "DisplayName": "SetSearchArea",
          "ReturnType": "Progile.TRIO.BaseModel.OnScreenElement",
          "IsGenericReturnType": "T"
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "BaseTypeName": "System.Object",
      "Interactions": [
        {
          "MethodName": "WaitForAppear",
          "DisplayName": "Verify element appears",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The element {this} was displayed on the screen.",
          "FailedMessage": "The element {this} was not found on the screen.",
          "HintText": "Waits for the element to appear on the screen. \r\nReturns false if element is not found."
        },
        {
          "MethodName": "WaitForDisappear",
          "DisplayName": "Verify element disappears",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The element {this} disappeared from the screen.",
          "FailedMessage": "The element {this} was unexpectedly still displayed on the screen.",
          "HintText": "Waits for the element to disappear from the screen. \r\nReturns false if element is still found."
        },
        {
          "Parameters": [
            {
              "Name": "elementInArea",
              "DisplayName": "Element in area",
              "IsOptional": false,
              "Type": "Progile.TRIO.BaseModel.OnScreenElement"
            },
            {
              "Name": "tolerance",
              "DisplayName": "tolerance",
              "IsOptional": true,
              "Type": "System.Double"
            }
          ],
          "MethodName": "SetSearchArea",
          "DisplayName": "Set search area",
          "ReturnType": "Progile.TRIO.BaseModel.OnScreenElement",
          "IsGenericReturnType": "T",
          "HintText": "Sets the search area of this element based on a different element (\"Element in area\")\r\nin the same area to prevent the problem that this element occurs multiple times on the screen."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.Button",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "Click",
          "DisplayName": "Click",
          "ReturnType": "System.Void",
          "HintText": "Clicks on the button.\r\nVerifies the click was successful with the specified verification\r\nand performs retries if necessary."
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            },
            {
              "Name": "doubleClickDelay",
              "DisplayName": "doubleClickDelay",
              "IsOptional": true,
              "Type": "System.Int32"
            }
          ],
          "MethodName": "DoubleClick",
          "DisplayName": "Double-click",
          "ReturnType": "System.Void",
          "HintText": "Performs a double click on the button. \r\nWait time between the individual clicks is controlled \r\nby the optional parameter \"doubleClickDelay\"."
        },
        {
          "MethodName": "ClickWithUpdateCheck",
          "DisplayName": "Click with update check",
          "ReturnType": "System.Void",
          "HintText": "Clicks on the button and uses an update check as verification. \r\nShould only be used if no other verify method is applicable.\r\nIf after the click no update is detected, retries are performed."
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "Hover",
          "DisplayName": "Hover over",
          "ReturnType": "System.Void",
          "HintText": "Moves the mouse over the button. \r\nVerifies the hover was successful with the specified verification \r\nand performs retries if necessary."
        },
        {
          "MethodName": "WaitForActive",
          "DisplayName": "Verify button becomes active",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The button {this} was active.",
          "FailedMessage": "The button {this} was not active.",
          "HintText": "Waits for the active status. \r\nReturns false if the status is not reached."
        },
        {
          "MethodName": "WaitForInactive",
          "DisplayName": "Verify button becomes inactive",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The button {this} was inactive.",
          "FailedMessage": "The button {this} was not inactive.",
          "HintText": "Waits for the inactive status. \r\nReturns false if the status is not reached."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.Checkbox",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "MethodName": "IsChecked",
          "DisplayName": "Verify checkbox is checked",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The checkbox {this} was checked.",
          "FailedMessage": "The checkbox {this} was not checked.",
          "HintText": "Returns true if the checked representation can be found, \r\nfalse if unchecked representation can be found \r\nand throws an exception if neither one or the other can be found."
        },
        {
          "MethodName": "IsUnchecked",
          "DisplayName": "Verify checkbox is unchecked",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The checkbox {this} was unchecked.",
          "FailedMessage": "The checkbox {this} was unexpectedly checked.",
          "HintText": "Returns true if the unchecked representation can be found, \r\nfalse if checked representation can be found \r\nand throws an exception if neither one or the other can be found."
        },
        {
          "MethodName": "Check",
          "DisplayName": "Check",
          "ReturnType": "System.Void",
          "HintText": "Checks the checkbox if it is not already in the correct state."
        },
        {
          "MethodName": "Uncheck",
          "DisplayName": "Uncheck",
          "ReturnType": "System.Void",
          "HintText": "Unchecks the checkbox if it is not already in the correct state."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.ContextMenu",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.Dropdown",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Value",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "SelectValue",
          "DisplayName": "Select value",
          "ReturnType": "System.Void",
          "HintText": "Opens the dropdown list, searches the text value \r\nin the list (incl. scrolling) and selects it."
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Value",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "SelectValueWithTyping",
          "DisplayName": "Select value with typing",
          "ReturnType": "System.Void",
          "HintText": "Opens the dropdown list, types the given input string and closes the dropdown box.\r\nVerifies if the selected value matches the given input value.\r\nIf the verification fails retries are performed."
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Expected value",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "actualValue",
              "DisplayName": "actualValue",
              "IsOptional": false,
              "Type": "out_string"
            }
          ],
          "MethodName": "VerifySelectedValue",
          "DisplayName": "Verify the selected value",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The expected value {value} was shown correctly as the selected value on {this}.",
          "FailedMessage": "The selected value on {this} was {actualValue} instead of the expected value {value}.",
          "HintText": "Verifies if the value that is currently set in the textbox \r\nmatches the expected value."
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Expected value",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "takeScreenshot",
              "DisplayName": "takeScreenshot",
              "IsOptional": true,
              "Type": "System.Boolean"
            }
          ],
          "MethodName": "VerifyValueInList",
          "DisplayName": "Verify a value in the list",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The expected value {value} was shown in the dropdown list {this}.",
          "FailedMessage": "The expected value {value} was not shown in the dropdown list {this}.",
          "HintText": "Opens the dropdown list and verifies that the provided value\r\nis present in the dropdown list (includes scrolling). \r\nCloses the dropdown list again."
        },
        {
          "MethodName": "GetSelectedValue",
          "DisplayName": "Get selected value",
          "ReturnType": "System.String",
          "HintText": "Reads the selected text from the Dropdown with OCR"
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.DropdownMenu",
      "BaseTypeName": "Progile.TRIO.BaseModel.Dropdown",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "selections",
              "DisplayName": "Submenus and value",
              "IsOptional": false,
              "Type": "System.String[]"
            }
          ],
          "MethodName": "SelectValueFromSubmenu",
          "DisplayName": "Select a value from a submenu",
          "ReturnType": "System.Void",
          "HintText": "Opens the dropdown menu, searches the first value from given \"Submenus and value\" in the list \r\nand selects it to open the next submenu. Then the next value is found in the submenu and so on.\r\nIf one of the texts cannot be found, throws a TestStepAbortedException."
        }
      ],
      "HiddenOverrideInteractions": [
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "value",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "actualValue",
              "DisplayName": "actualValue",
              "IsOptional": false,
              "Type": "out_string"
            }
          ],
          "MethodName": "VerifySelectedValue",
          "DisplayName": "VerifySelectedValue",
          "ReturnType": "System.Boolean",
          "PassedMessage": "VerifySelectedValue on {this} passed",
          "FailedMessage": "VerifySelectedValue on {this} failed"
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.IconButton",
      "BaseTypeName": "Progile.TRIO.BaseModel.Button"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.Label",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.LabelWithButton",
      "BaseTypeName": "Progile.TRIO.BaseModel.LabelWithElementBase",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "Click",
          "DisplayName": "Click",
          "ReturnType": "System.Void",
          "HintText": "Clicks on the button.\r\nVerifies the click was successful with the specified verification\r\nand performs retries if necessary."
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            },
            {
              "Name": "doubleClickDelay",
              "DisplayName": "doubleClickDelay",
              "IsOptional": true,
              "Type": "System.Int32"
            }
          ],
          "MethodName": "DoubleClick",
          "DisplayName": "Double-click",
          "ReturnType": "System.Void",
          "HintText": "Performs a double click on the button. \r\nWait time between the individual clicks is controlled \r\nby the optional parameter \"doubleClickDelay\"."
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "Hover",
          "DisplayName": "Hover over",
          "ReturnType": "System.Void",
          "HintText": "Moves the mouse over the button. \r\nVerifies the hover was successful with the specified verification \r\nand performs retries if necessary."
        },
        {
          "MethodName": "WaitForActive",
          "DisplayName": "Verify button becomes active",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The button {this} was active.",
          "FailedMessage": "The button {this} was not active.",
          "HintText": "Waits for the active status. \r\nReturns false if the status is not reached."
        },
        {
          "MethodName": "WaitForInactive",
          "DisplayName": "Verify button becomes inactive",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The button {this} was inactive.",
          "FailedMessage": "The button {this} was not inactive.",
          "HintText": "Waits for the inactive status. \r\nReturns false if the status is not reached."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.LabelWithElementBase",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.LabelWithCheckbox",
      "BaseTypeName": "Progile.TRIO.BaseModel.LabelWithElementBase",
      "Interactions": [
        {
          "MethodName": "IsChecked",
          "DisplayName": "Verify checkbox is checked",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The checkbox {this} was checked.",
          "FailedMessage": "The checkbox {this} was not checked.",
          "HintText": "Returns true if the checked representation can be found, \r\nfalse if unchecked representation can be found \r\nand throws an exception if neither one or the other can be found."
        },
        {
          "MethodName": "IsUnchecked",
          "DisplayName": "Verify checkbox is unchecked",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The checkbox {this} was unchecked.",
          "FailedMessage": "The checkbox {this} was unexpectedly checked.",
          "HintText": "Returns true if the unchecked representation can be found, \r\nfalse if checked representation can be found \r\nand throws an exception if neither one or the other can be found."
        },
        {
          "MethodName": "Check",
          "DisplayName": "Check",
          "ReturnType": "System.Void",
          "HintText": "Checks the checkbox if it is not already in the correct state."
        },
        {
          "MethodName": "Uncheck",
          "DisplayName": "Uncheck",
          "ReturnType": "System.Void",
          "HintText": "Unchecks the checkbox if it is not already in the correct state."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.LabelWithValue",
      "BaseTypeName": "Progile.TRIO.BaseModel.LabelWithElementBase",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Expected value",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "actualValue",
              "DisplayName": "actualValue",
              "IsOptional": false,
              "Type": "out_string"
            }
          ],
          "MethodName": "VerifyValue",
          "DisplayName": "Verify the value",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The expected value {value} was shown correctly for {this}.",
          "FailedMessage": "The value for {this} was {actualValue} instead of the expected value {value}.",
          "HintText": "Verifies the dynamic \"Expected value\" with OCR, \r\nusing a rectangle that is determined by the relative position to the static label."
        },
        {
          "Parameters": [
            {
              "Name": "value",
              "DisplayName": "Expected value",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "waitTime",
              "DisplayName": "Wait time",
              "IsOptional": false,
              "Type": "System.TimeSpan"
            },
            {
              "Name": "actualValue",
              "DisplayName": "actualValue",
              "IsOptional": false,
              "Type": "out_string"
            }
          ],
          "MethodName": "WaitForValue",
          "DisplayName": "Wait for the value",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The expected value {value} was shown correctly for {this}.",
          "FailedMessage": "The value for {this} was {actualValue} after the timeout instead of the expected value {value}.",
          "HintText": "Waits for the specified \"Expected value\" for the given \"Wait time\"."
        },
        {
          "MethodName": "ReadValue",
          "DisplayName": "Read value",
          "ReturnType": "System.String",
          "HintText": "Reads the value in the Search Rectangle determined by the Label and the relative position using OCR."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.PwTextBox",
      "BaseTypeName": "Progile.TRIO.BaseModel.TextBox",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "pw",
              "DisplayName": "Password",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "Enter",
          "DisplayName": "Enter",
          "ReturnType": "System.Void",
          "HintText": "Clicks in the textbox, selects all and types the given \"Password\".\r\nThe interaction is verified by counting the number of characters.\r\n(based on password character image that was defined for the element)\r\nIf the number doesn't match the \"Password\", retries are done."
        },
        {
          "Parameters": [
            {
              "Name": "expectedText",
              "DisplayName": "expectedText",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "VerifyText",
          "DisplayName": "Verify the password (only length)",
          "ReturnType": "System.Boolean",
          "PassedMessage": "Verify the password (only length) on {this} passed",
          "FailedMessage": "Verify the password (only length) on {this} failed",
          "HintText": "Verifies if the password was entered correctly by counting the number of characters \r\nbased on password character image that was defined for the element."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.TextBox",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "textToEnter",
              "DisplayName": "Text to enter",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "Enter",
          "DisplayName": "Enter",
          "ReturnType": "System.Void",
          "HintText": "Clicks in the textbox, selects all and types the \"Text to enter\".\r\nThe text that is entered is verified to ensure the complete text was correctly entered. \r\nIf the verification fails, retries are performed."
        },
        {
          "Parameters": [
            {
              "Name": "textToEnter",
              "DisplayName": "Text to enter",
              "IsOptional": false,
              "Type": "System.String"
            }
          ],
          "MethodName": "EnterWithoutVerification",
          "DisplayName": "Enter without verification",
          "ReturnType": "System.Void",
          "HintText": "Enters text in a textbox but does not verify if anything was entered at all. \r\nOnly use this if there is really no way to verify the entered text."
        },
        {
          "MethodName": "PasteText",
          "DisplayName": "Paste from clipboard",
          "ReturnType": "System.Void",
          "HintText": "Pastes the text from the clipboard on the SUT to the text box.\r\nOverwrites what was in the textbox before."
        },
        {
          "MethodName": "GetText",
          "DisplayName": "Get text",
          "ReturnType": "System.String",
          "HintText": "Copies or reads the text from the TextBox (depending on the TextBoxType)"
        },
        {
          "Parameters": [
            {
              "Name": "expectedText",
              "DisplayName": "Expected text",
              "IsOptional": false,
              "Type": "System.String"
            },
            {
              "Name": "actualText",
              "DisplayName": "actualText",
              "IsOptional": false,
              "Type": "out_string"
            }
          ],
          "MethodName": "VerifyText",
          "DisplayName": "Verify the text",
          "ReturnType": "System.Boolean",
          "PassedMessage": "The expected text {expectedText} was shown correctly in {this}.",
          "FailedMessage": "The text in {this} was {actualText} instead of the expected text {expectedText}.",
          "HintText": "Verifies if the text in the textbox is the same as the provided \"Expected text\"."
        },
        {
          "MethodName": "VerifyReadonly",
          "DisplayName": "Verify textbox is read-only",
          "ReturnType": "System.Boolean",
          "PassedMessage": "Verify textbox is read-only on {this} passed",
          "FailedMessage": "Verify textbox is read-only on {this} failed",
          "HintText": "Verifies the text is read-only by comparing the text in the textbox before and after typing in the textbox."
        },
        {
          "MethodName": "ClickOutOfBox",
          "DisplayName": "Click out of the text box",
          "ReturnType": "System.Void",
          "HintText": "Clicks out of the textbox, slightly to the left, \r\nto take away the focus of the box."
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.GenericScroller",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.IScroller",
      "BaseTypeName": null
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.HorizontalScroller",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.Row",
      "BaseTypeName": "Progile.TRIO.BaseModel.OnScreenElement",
      "Interactions": [
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "HoverOver",
          "DisplayName": "Hover over",
          "ReturnType": "System.Void",
          "HintText": "Hovers mouse pointer over the row to \"activate\" it, \r\ne.g. to show icons that are only shown on hover"
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            }
          ],
          "MethodName": "SelectRow",
          "DisplayName": "Click",
          "ReturnType": "System.Void",
          "HintText": "Selects the row by clicking in the row at the position \r\nof the element that was used to find the row."
        },
        {
          "Parameters": [
            {
              "Name": "verification",
              "DisplayName": "verification",
              "IsOptional": false,
              "Type": "interaction"
            },
            {
              "Name": "doubleClickDelay",
              "DisplayName": "doubleClickDelay",
              "IsOptional": true,
              "Type": "System.Int32"
            }
          ],
          "MethodName": "SelectRowWithDoubleClick",
          "DisplayName": "Double-click",
          "ReturnType": "System.Void",
          "HintText": "Performs a double click on the row."
        },
        {
          "MethodName": "SelectRowWithUpdateCheck",
          "DisplayName": "Click with update check",
          "ReturnType": "System.Void",
          "HintText": "Selects the row by clicking in the row at the position of the element that was used to find the row.\r\nIf after the click no update is detected, retries are performed.\r\nShould only be used if no other verify method is applicable."
        },
        {
          "Parameters": [
            {
              "Name": "element",
              "DisplayName": "element",
              "IsOptional": false,
              "IsGenericType": "T",
              "Type": "Progile.TRIO.BaseModel.OnScreenElement"
            }
          ],
          "MethodName": "GetElementInRow",
          "DisplayName": "Get Element in row",
          "ReturnType": "Progile.TRIO.BaseModel.OnScreenElement",
          "IsGenericReturnType": "T",
          "HintText": "Sets the search area of the given element to the rectangle of this row.\r\nLike this it is possible to search for one specific instance of an element that occurs in different rows."
        },
        {
          "Parameters": [
            {
              "Name": "button",
              "DisplayName": "button",
              "IsOptional": false,
              "Type": "Progile.TRIO.BaseModel.Button"
            }
          ],
          "MethodName": "GetButtonInRow",
          "DisplayName": "Get Button in row",
          "ReturnType": "Progile.TRIO.BaseModel.Button",
          "IsObsolete": true
        },
        {
          "Parameters": [
            {
              "Name": "checkbox",
              "DisplayName": "checkbox",
              "IsOptional": false,
              "Type": "Progile.TRIO.BaseModel.Checkbox"
            }
          ],
          "MethodName": "GetCheckboxInRow",
          "DisplayName": "Get Checkbox in row",
          "ReturnType": "Progile.TRIO.BaseModel.Checkbox",
          "IsObsolete": true
        }
      ]
    },
    {
      "TypeName": "Progile.TRIO.EnvironmentModel.Window",
      "BaseTypeName": "Progile.TRIO.BaseModel.BaseScreen"
    },
    {
      "TypeName": "Progile.TRIO.BaseModel.IWindow",
      "BaseTypeName": null
    }
  ],
  "ModelOcrParamList": [
    {
      "FullName": "Progile.TRIO.BaseModel.OcrParams.AlternativeEngine"
    },
    {
      "FullName": "Progile.TRIO.BaseModel.OcrParams.ExactMatch"
    }
  ]
}